#### LH parameters
paraSet2 = list(mu1 = 1.5, tauB1 = 0, b = 1, Vc0= 0.1, Vtauc0 = 0.1,
Vrc0 = 0.2, Veps0 = 0.6, Vr0 = 0.03, Vtaur0 = 0.03)
Nr0 = 100
fixed.sz.pilot <- c(100, 60)
fixed.sz.inter <- c(100, 0.045)
set.seed(setseed*5 + 100000)
ret.simu2 <- SimuAdaptiveTypeI(paraSet2, Nr0, fixed.sz.pilot, fixed.sz.inter)
# sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
#
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsLH/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
#### HL ####
paraSet3 = list(mu1 = 0.75, tauB1 = 0, b = 1, Vc0= 0.3, Vtauc0 = 0.3,
Vrc0 = 0.2, Veps0 = 0.2, Vr0 = 0.0055, Vtaur0 = 0.0055)
Nr0 = 100
fixed.sz.pilot <- c(200, 60)
fixed.sz.inter <- c(200, 0.06)
set.seed(setseed*5)
ret.simu3 <- SimuAdaptiveTypeI(paraSet3, Nr0, fixed.sz.pilot, fixed.sz.inter)
# sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
#
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsHL/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
#### LL ####
paraSet4 = list(mu1 = 1.5, tauB1 = 0, b = 1, Vc0= 0.1, Vtauc0 = 0.1,
Vrc0 = 0.2, Veps0 = 0.6, Vr0 = 0.0055, Vtaur0 = 0.0055)
Nr0 = 100
fixed.sz.pilot <- c(100, 30)
fixed.sz.inter <- c(100, 0.045)
set.seed(setseed*5 + 50000)
ret.simu4 <- SimuAdaptiveTypeI(paraSet4, Nr0, fixed.sz.pilot, fixed.sz.inter)
# sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
#
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsLL/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
time.sim = proc.time()-time.simi
setseed
#######################################################################################
ran_init_sym<-Sys.getenv("RAND_INIT")
if(ran_init_sym=="") ran_init<-0 else ran_init<-as.numeric(ran_init_sym)
setseed <-ran_init+as.numeric(Sys.getenv("SGE_TASK_ID"))
#######################################################################################
# set the work directory and source the functions
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang")
source("mrmcAnalysisOR_Huang.R")
source("mrmcSimulationRM_Huang.R")
source("SimuAdaptiveTypeI_Huang.R")
# fixed.sz.pilot: fixed sample size parameters in the "Reuse of pilot data" study
# [1]: the number of cases per class to be generated
# [2]: the number of cases for the pilot study
#
# fixed.sz.inter
# [1]: the number of cases per class
# [2]: the presumed effect size in sizing
# Nr0: the number of reader used in data generation
# paraSet: the parameters setted in data generation
# paraSet = c(mu1,tauB1,b,Vc0,Vtauc0,Vrc0,Veps0,Vr0,Vtaur0)
# read the parameter setting for generating the data
#paraSet1 <- readRDS(file="ParameterSettingForTable1.Rda")
time.sim = proc.time()
###### HH parameters
paraSet1 = list(mu1 = 2.5, tauB1 = 0, b = 1, Vc0= 0.3, Vtauc0 = 0.3,
Vrc0 = 0.2, Veps0 = 0.2, Vr0 = 0.056, Vtaur0 = 0.056)
Nr0 = 100
fixed.sz.pilot <- c(150, 50)
fixed.sz.inter <- c(150, 0.03)
set.seed(setseed*5 + 150000)
ret.simu1 <- SimuAdaptiveTypeI(paraSet1, Nr0, fixed.sz.pilot, fixed.sz.inter)
#sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsHH/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
#### LH parameters
paraSet2 = list(mu1 = 1.5, tauB1 = 0, b = 1, Vc0= 0.1, Vtauc0 = 0.1,
Vrc0 = 0.2, Veps0 = 0.6, Vr0 = 0.03, Vtaur0 = 0.03)
Nr0 = 100
fixed.sz.pilot <- c(100, 60)
fixed.sz.inter <- c(100, 0.045)
set.seed(setseed*5 + 100000)
ret.simu2 <- SimuAdaptiveTypeI(paraSet2, Nr0, fixed.sz.pilot, fixed.sz.inter)
# sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
#
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsLH/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
#### HL ####
paraSet3 = list(mu1 = 0.75, tauB1 = 0, b = 1, Vc0= 0.3, Vtauc0 = 0.3,
Vrc0 = 0.2, Veps0 = 0.2, Vr0 = 0.0055, Vtaur0 = 0.0055)
Nr0 = 100
fixed.sz.pilot <- c(200, 60)
fixed.sz.inter <- c(200, 0.06)
set.seed(setseed*5)
ret.simu3 <- SimuAdaptiveTypeI(paraSet3, Nr0, fixed.sz.pilot, fixed.sz.inter)
# sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
#
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsHL/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
#### LL ####
paraSet4 = list(mu1 = 1.5, tauB1 = 0, b = 1, Vc0= 0.1, Vtauc0 = 0.1,
Vrc0 = 0.2, Veps0 = 0.6, Vr0 = 0.0055, Vtaur0 = 0.0055)
Nr0 = 100
fixed.sz.pilot <- c(100, 30)
fixed.sz.inter <- c(100, 0.045)
set.seed(setseed*5 + 50000)
ret.simu4 <- SimuAdaptiveTypeI(paraSet4, Nr0, fixed.sz.pilot, fixed.sz.inter)
# sim.result <- cbind(ret.simu$p.pilot, ret.simu$p.interium, ret.simu$Nr.piv)
#
# datapath <- "/scratch/wxc4/SimuAdaptiveResultsLL/"
# fname <- paste(datapath, sprintf("results_seed_%05d", setseed), sep="")
# write.table(sim.result, file = fname, append = F, quote = F, row.names = F,col.names = F)
time.sim = proc.time()-time.sim
time.sim
ret.simu1
ran_init_sym<-Sys.getenv("RAND_INIT")
ran_init_sym
ran_init
as.numeric(Sys.getenv("SGE_TASK_ID"))
time.sim
time.sim/60
AUCA
fiexed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fiexed.sz.pilot
# the structure of combinations of varC (H or L) and varR (H or L) #
varStruc = c("HH","LH","HL","LL")
mu1 = c(2.5,1.5,0.75,1.5); tauB1 = rep(0,4); b = rep(1,4);
Vc0 = Vtauc0 = c(0.3,0.1,0.3,0.1); Vrc0 = rep(0.2,4); Veps0 = c(0.2,0.6,0.2,0.6)
Vr0 = Vtaur0 = c(0.056,0.03,0.0055,0.0055);
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = fullb,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
Nr0 = rep(100,4);
fiexed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fiexed.sz.inter = rbind(c(150, 0.03),c(100, 0.045),c(200, 0.06),c(100, 0.045))
randseed0 = c(150000,100000,0, 50000)
paraSet0
varStruc = c("HH","LH","HL","LL")
mu1 = c(2.5,1.5,0.75,1.5); tauB1 = rep(0,4); b = rep(1,4);
Vc0 = Vtauc0 = c(0.3,0.1,0.3,0.1); Vrc0 = rep(0.2,4); Veps0 = c(0.2,0.6,0.2,0.6)
Vr0 = Vtaur0 = c(0.056,0.03,0.0055,0.0055);
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = fullb,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
paraSet0
varStruc
b
rm(list=ls())
varStruc = c("HH","LH","HL","LL")
mu1 = c(2.5,1.5,0.75,1.5); tauB1 = rep(0,4); b = rep(1,4);
Vc0 = Vtauc0 = c(0.3,0.1,0.3,0.1); Vrc0 = rep(0.2,4); Veps0 = c(0.2,0.6,0.2,0.6)
Vr0 = Vtaur0 = c(0.056,0.03,0.0055,0.0055);
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = fullb,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = b,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
paraSet0
paraSet0[,1]
paraSet0[1,]
tt=paraSet0
mode(tt)
str(tt)
tt=paraSet0[1,]
str(tt)
mode(tt)
paraSet0
fiexed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fiexed.sz.inter = rbind(c(150, 0.03),c(100, 0.045),c(200, 0.06),c(100, 0.045))
fixed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fixed.sz.inter = rbind(c(150, 0.03),c(100, 0.045),c(200, 0.06),c(100, 0.045))
fixed.sz.pilot
fixed.sz.pilot[1,]
fixed.sz.inter
paraSet0[kk,]
paraSet0[1,]
fixed.sz.pilot
fixed.sz.inter
dim(ret.simu1)
# set the work directory and source the functions
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang")
source("mrmcAnalysisOR_Huang.R")
source("mrmcSimulationRM_Huang.R")
source("SimuAdaptiveTypeI_Huang.R")
# fixed.sz.pilot: fixed sample size parameters in the "Reuse of pilot data" study
# [1]: the number of cases per class to be generated
# [2]: the number of cases for the pilot study
#
# fixed.sz.inter
# [1]: the number of cases per class
# [2]: the presumed effect size in sizing
# Nr0: the number of reader used in data generation
# paraSet: the parameters setted in data generation
# paraSet = c(mu1,tauB1,b,Vc0,Vtauc0,Vrc0,Veps0,Vr0,Vtaur0)
# read the parameter setting for generating the data
#paraSet1 <- readRDS(file="ParameterSettingForTable1.Rda")
time.sim = proc.time()
# the structure of combinations of varC (H or L) and varR (H or L) #
varStruc = c("HH","LH","HL","LL")
mu1 = c(2.5,1.5,0.75,1.5); tauB1 = rep(0,4); b = rep(1,4);
Vc0 = Vtauc0 = c(0.3,0.1,0.3,0.1); Vrc0 = rep(0.2,4); Veps0 = c(0.2,0.6,0.2,0.6)
Vr0 = Vtaur0 = c(0.056,0.03,0.0055,0.0055);
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = b,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
Nr0 = rep(100,4);
fixed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fixed.sz.inter = rbind(c(150, 0.03),c(100, 0.045),c(200, 0.06),c(100, 0.045))
randseed0 = c(150000,100000,0, 50000)
ret.simu =  vector("list",length(varStruc))
for(ss in 1:length(varStruc)){
#set.seed(setseed*5 + randseed0[kk])
set.seed(randseed0[ss])
ret.simu = SimuAdaptiveTypeI(paraSet0[ss,], Nr0[ss], fixed.sz.pilot[ss,], fixed.sz.inter[ss,])
}
ret.simu =  vector("list",length(varStruc))
ret.simu
ret.simu =  vector("list",length(varStruc))
# set the work directory and source the functions
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang")
source("mrmcAnalysisOR_Huang.R")
source("mrmcSimulationRM_Huang.R")
source("SimuAdaptiveTypeI_Huang.R")
# fixed.sz.pilot: fixed sample size parameters in the "Reuse of pilot data" study
# [1]: the number of cases per class to be generated
# [2]: the number of cases for the pilot study
#
# fixed.sz.inter
# [1]: the number of cases per class
# [2]: the presumed effect size in sizing
# Nr0: the number of reader used in data generation
# paraSet: the parameters setted in data generation
# paraSet = c(mu1,tauB1,b,Vc0,Vtauc0,Vrc0,Veps0,Vr0,Vtaur0)
# read the parameter setting for generating the data
#paraSet1 <- readRDS(file="ParameterSettingForTable1.Rda")
time.sim = proc.time()
# the structure of combinations of varC (H or L) and varR (H or L) #
varStruc = c("HH","LH","HL","LL")
mu1 = c(2.5,1.5,0.75,1.5); tauB1 = rep(0,4); b = rep(1,4);
Vc0 = Vtauc0 = c(0.3,0.1,0.3,0.1); Vrc0 = rep(0.2,4); Veps0 = c(0.2,0.6,0.2,0.6)
Vr0 = Vtaur0 = c(0.056,0.03,0.0055,0.0055);
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = b,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
Nr0 = rep(100,4);
fixed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fixed.sz.inter = rbind(c(150, 0.03),c(100, 0.045),c(200, 0.06),c(100, 0.045))
randseed0 = c(150000,100000,0, 50000)
ret.simu =  vector("list",length(varStruc))
ss=1
set.seed(randseed0[ss])
ret.simu[[ss]] = SimuAdaptiveTypeI(paraSet0[ss,], Nr0[ss], fixed.sz.pilot[ss,], fixed.sz.inter[ss,])
ret.simu
model(ret.simu)
mode(ret.simu)
mode(ret.simu[[1]])
dim(ret.simu[[1]])
srt(ret.simu[[1]])
str(ret.simu[[1]])
length(ret.simu)
# set the work directory and source the functions
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang")
source("mrmcAnalysisOR_Huang.R")
source("mrmcSimulationRM_Huang.R")
source("SimuAdaptiveTypeI_Huang.R")
# fixed.sz.pilot: fixed sample size parameters in the "Reuse of pilot data" study
# [1]: the number of cases per class to be generated
# [2]: the number of cases for the pilot study
#
# fixed.sz.inter
# [1]: the number of cases per class
# [2]: the presumed effect size in sizing
# Nr0: the number of reader used in data generation
# paraSet: the parameters setted in data generation
# paraSet = c(mu1,tauB1,b,Vc0,Vtauc0,Vrc0,Veps0,Vr0,Vtaur0)
# read the parameter setting for generating the data
#paraSet1 <- readRDS(file="ParameterSettingForTable1.Rda")
time.sim = proc.time()
# the structure of combinations of varC (H or L) and varR (H or L) #
varStruc = c("HH","LH","HL","LL")
mu1 = c(2.5,1.5,0.75,1.5); tauB1 = rep(0,4); b = rep(1,4);
Vc0 = Vtauc0 = c(0.3,0.1,0.3,0.1); Vrc0 = rep(0.2,4); Veps0 = c(0.2,0.6,0.2,0.6)
Vr0 = Vtaur0 = c(0.056,0.03,0.0055,0.0055);
paraSet0 = data.frame(varStruc = varStruc,mu1 = mu1, tauB1 = tauB1, b = b,
Vc0 = Vc0, Vtauc0 = Vtauc0, Vrc0 = Vrc0, Veps0 = Veps0,
Vr0 = Vr0, Vtaur0 = Vtaur0)
Nr0 = rep(100,4);
fixed.sz.pilot  = rbind(c(150,50),c(100, 60),c(200, 60),c(100, 30))
fixed.sz.inter = rbind(c(150, 0.03),c(100, 0.045),c(200, 0.06),c(100, 0.045))
randseed0 = c(150000,100000,0, 50000)
sim.result =  vector("list",length(varStruc))
for(ss in 1:length(varStruc)){
#set.seed(setseed*5 + randseed0[ss])
set.seed(randseed0[ss])
sim.result[[ss]] = SimuAdaptiveTypeI(paraSet0[ss,], Nr0[ss], fixed.sz.pilot[ss,], fixed.sz.inter[ss,])
}
time.sim = proc.time() - time.sim
time.sim
time.sim/60
sim.result
setseed =1
sprintf("SimuAdaptiveResultsHL/results_seed_%05d", setseed)
getwd()
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang/SimuAdaptiveResults")
setseed
fname <- sprintf("SimuAdaptiveResultsHH/results_seed_%05d", setseed)
data <- read.table(fname)
fname <- sprintf("results_seed_%05d", setseed)
data <- read.table(fname)
View(data)
data()
data
data1 <- read.table(fname)
mode(data1)
str(data1)
mode(data[1,])
mode(data[,1])
# set the work directory and source the functions
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang/SimuAdaptiveResults")
# the number of the structure of combinations of varC (H or L) and varR (H or L): #@ Nstru
# the number of study design (pilot:3; interium:6): #@ Ndesi
# pilot: c("full_reuse","no_reuse","case_reuse")--3
# interium: c("nointerium","interium","resize1","resize2","resize3","resize4")--6
# the times when reader size resized: c("pivotal","resize1","resize3"): #@ Nr.piv = 3
# number of parallel computation in betsy cluster: #@ Npal
# number of replicate in each node: #@ nexp = 100
nexp = 100; N.stru = 4; N.design = 9; Nr.piv = 3; N.outcome = N.desi+Nr.piv; Nparal = 3;
simu.result <- matrxi(0, nrow = N.stru, ncol = N.design)
for(setseed in 1:Nparal){
fname <- sprintf("results_seed_%05d", setseed)
paral.result <- read.table(fname)
for(i in 1:Nstru){
for(j in 1:N.design){
simu.result[i,j] = simu.result[i,j]+length(which(paral.result[,N.ouotcome*(i-1)+j] < 0.05))
}
}
}
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang/SimuAdaptiveResults")
nexp = 100; N.stru = 4; N.design = 9; Nr.piv = 3; N.outcome = N.desi+Nr.piv; Nparal = 3;
nexp = 100; N.stru = 4; N.design = 9; Nr.piv = 3; N.outcome = N.design+Nr.piv; Nparal = 3;
simu.result <- matrxi(0, nrow = N.stru, ncol = N.design)
simu.result <- array(0, nrow = N.stru, ncol = N.design)
simu.result <- array(0, c(N.stru,N.design))
for(setseed in 1:Nparal){
fname <- sprintf("results_seed_%05d", setseed)
paral.result <- read.table(fname)
for(i in 1:Nstru){
for(j in 1:N.design){
simu.result[i,j] = simu.result[i,j]+length(which(paral.result[,N.ouotcome*(i-1)+j] < 0.05))
}
}
}
# number of parallel computation in betsy cluster: #@ Npal
# number of replicate in each node: #@ nexp = 100
nexp = 100; N.stru = 4; N.design = 9; Nr.piv = 3; N.outcome = N.design+Nr.piv; N.paral = 3;
simu.result <- array(0, c(N.stru,N.design))
for(setseed in 1:N.paral){
fname <- sprintf("results_seed_%05d", setseed)
paral.result <- read.table(fname)
for(i in 1:N.stru){
for(j in 1:N.design){
simu.result[i,j] = simu.result[i,j]+length(which(paral.result[,N.ouotcome*(i-1)+j] < 0.05))
}
}
}
N.outcome
nexp = 100; N.stru = 4; N.design = 9; Nr.piv = 3; N.outcome = N.design+Nr.piv; N.paral = 3;
simu.result <- array(0, c(N.stru,N.design))
for(setseed in 1:N.paral){
fname <- sprintf("results_seed_%05d", setseed)
paral.result <- read.table(fname)
for(i in 1:N.stru){
for(j in 1:N.design){
simu.result[i,j] = simu.result[i,j]+length(which(paral.result[,N.outcome*(i-1)+j] < 0.05))
}
}
}
sim.result
simu.result
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/Huang/SimuAdaptiveResults")
# the number of the structure of combinations of varC (H or L) and varR (H or L): #@ Nstru
# the number of study design (pilot:3; interium:6): #@ Ndesi
# pilot: c("full_reuse","no_reuse","case_reuse")--3
# interium: c("nointerium","interium","resize1","resize2","resize3","resize4")--6
# the times when reader size resized: c("pivotal","resize1","resize3"): #@ Nr.piv = 3
# number of parallel computation in betsy cluster: #@ Npal
# number of replicate in each node: #@ nexp = 100
nexp = 100; N.stru = 4; N.design = 9; Nr.piv = 3; N.outcome = N.design+Nr.piv; N.paral = 3;
p.count.result <- array(0, c(N.stru,N.design))
for(setseed in 1:N.paral){
fname <- sprintf("results_seed_%05d", setseed)
paral.result <- read.table(fname)
for(i in 1:N.stru){
for(j in 1:N.design){
p.count.result[i,j] = p.count.result[i,j]+length(which(paral.result[,N.outcome*(i-1)+j] < 0.05))
}
}
}
p.result = p.count.result/(nexp*N.paral)
p.result
row.names(p.result) = c("HH","LH","HL","LL")
colnames(p.result) = c("full_reuse","no_reuse","case_reuse",
"nointerium","interium","resize1","resize2","resize3","resize4")
p.result
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary01error.Rdata")
Nr.result
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary00.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary02error.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang/Results/p-values_re-sample-size_time_summary10.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang/Results/p-values_re-sample-size_time_summary10.Rdata")
Nr.result
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary00.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary01error.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/ParameterSettingForTable2.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/ParameterSettingForTable1.Rdata")
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary02error.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang/Results/p-values_re-sample-size_time_summary10.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary00.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary01error.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/p-values_re-sample-size_time_summary02error.Rdata")
round(Nr.result)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/Nr.Tabe1.01error.Rdata")
View(Nr.Table1.error)
load("~/Desktop/MRMC/CodesAdaptive/Huang.eff.pilot0.01/Results/Nr.Tabe2.02error.Rdata")
Nr.Table1.error
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/Huang/Results/Try.Nr.Table1.1error.Rdata")
Nr.try
load("~/Desktop/MRMC/CodesAdaptive/Huang/Results/Try.Nr.Table2.1error.Rdata")
Nr.try
fixed.sz.pilot
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/Results/summary_FC_null_Table1.Rdata")
id.novalid
n.novalid
time.summ
result.mean
result.mean[17:18,]
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/Results/summary_FC_null_Table1.Rdata")
id.novalid
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/Results/summary_FC_null_Table1.Rdata")
id.novalid
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/result0/results_seed_01888.Rdata")
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
para1.null = para1.error
para1.alter = para1.power
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/")
fname = paste(getwd(),sprintf("/Results/ParameterSettingForTable1.Rdata"),sep="")
save(para1.null,para1.alter, file =fname)
fname
save(para1.null,para1.alter, file =fname)
getwd()
fname
fname = paste(getwd(),sprintf("/ParameterSettingForTable1.Rdata"),sep="")
save(para1.null,para1.alter, file =fname)
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable2.Rdata")
para.null = para2.error
para.alter = para2.power
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/")
fname = paste(getwd(),sprintf("/ParameterSettingForTable1.Rdata"),sep="")
save(para.null,para.alter, file =fname)
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/ParameterSetting/ParameterSettingForTable2.Rdata")
para.null = para2.error
para.alter = para2.power
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/")
fname = paste(getwd(),sprintf("/ParameterSettingForTable2.Rdata"),sep="")
fname
save(para.null,para.alter, file =fname)
rm(list=ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/ParameterSetting/ParameterSettingForTable1.Rdata")
para.null = para1.error
para.alter = para1.power
setwd("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/")
fname = paste(getwd(),sprintf("/ParameterSettingForTable1.Rdata"),sep="")
save(para.null,para.alter, file =fname)
para.null
para.alter
load("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
rm(list = ls())
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
para.null
para.alter3
para.alter5
load("~/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable2.Rdata")
para.null
para.alter5
load("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
load("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
View(para.null)
load("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable2.Rdata")
load("/home/zhuang/Desktop/MRMC/CodesAdaptive/FullyCross/Perceus/ParameterSetting/ParameterSettingForTable1.Rdata")
